{"version":3,"file":"static/js/603.5d4371db.chunk.js","mappings":"0XAOA,MAAMA,EAAOA,KACX,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAsBD,EAAAA,EAAAA,QAAO,MAiLnC,OA9KAE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASJ,EAAUK,QACnBC,EAAMF,EAAOG,WAAW,KAAM,CAAEC,OAAO,IAC7C,IAAIC,EACAC,EAAY,GAEhB,MAAMC,EAAeA,KACnBP,EAAOQ,MAAQC,OAAOC,WACtBV,EAAOW,OAASF,OAAOG,YACvBC,GAAe,EAGXA,EAAgBA,KACpBP,EAAYQ,MAAMC,KAAK,CAAEC,OAAQ,MAAO,MACtCC,EAAGC,KAAKC,SAAWnB,EAAOQ,MAC1BY,EAAGF,KAAKC,SAAWnB,EAAOW,OAC1BU,GAA4B,IAAvBH,KAAKC,SAAW,IACrBG,GAA4B,IAAvBJ,KAAKC,SAAW,IACrBI,OAAwB,EAAhBL,KAAKC,SAAe,EAC5BK,QAAyB,GAAhBN,KAAKC,SAAiB,GAC/BM,YAAa,MACZ,EAsDCC,EAAUA,KAZdpB,EAAUqB,SAAQC,IAChBA,EAASX,GAAKW,EAASP,GACvBO,EAASR,GAAKQ,EAASN,GAGnBM,EAASX,EAAI,IAAGW,EAASX,EAAIjB,EAAOQ,OACpCoB,EAASX,EAAIjB,EAAOQ,QAAOoB,EAASX,EAAI,GACxCW,EAASR,EAAI,IAAGQ,EAASR,EAAIpB,EAAOW,QACpCiB,EAASR,EAAIpB,EAAOW,SAAQiB,EAASR,EAAI,EAAC,IA9ChDlB,EAAI2B,UAAU,EAAG,EAAG7B,EAAOQ,MAAOR,EAAOW,QAGzCT,EAAI4B,YACJ5B,EAAI6B,YAAc,4BAClB7B,EAAI8B,UAAY,GAEhB1B,EAAUqB,SAAQC,IAEhBtB,EAAUqB,SAAQM,IAChB,GAAIL,IAAaK,EAAO,CACtB,MAAMC,EAAKN,EAASX,EAAIgB,EAAMhB,EACxBkB,EAAKP,EAASR,EAAIa,EAAMb,EACbF,KAAKkB,KAAKF,EAAKA,EAAKC,EAAKA,GAE3B,MACbjC,EAAImC,OAAOT,EAASX,EAAGW,EAASR,GAChClB,EAAIoC,OAAOL,EAAMhB,EAAGgB,EAAMb,GAE9B,IACA,IAEJlB,EAAIqC,SAGJjC,EAAUqB,SAAQC,IAChB1B,EAAI4B,YACJ5B,EAAIsC,IAAIZ,EAASX,EAAGW,EAASR,EAAGQ,EAASL,OAAQ,EAAa,EAAVL,KAAKuB,IACzDvC,EAAIwC,UAAY,uBAAuBd,EAASJ,WAChDtB,EAAIyC,OAGJzC,EAAI0C,WAAa,GACjB1C,EAAI2C,YAAc,0BAA0B,IAoB9CxC,EAAmByC,sBAAsBpB,EAAQ,EAOnD,OAJAnB,IACAE,OAAOsC,iBAAiB,SAAUxC,GAClCmB,IAEO,KACLjB,OAAOuC,oBAAoB,SAAUzC,GACrC0C,qBAAqB5C,EAAiB,CACvC,GACA,KAGHN,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASF,EAAoBG,QAC7BC,EAAMF,EAAOG,WAAW,KAAM,CAAEC,OAAO,IAC7C,IAAIC,EACAC,EAAY,GAEhB,MAAMC,EAAeA,KACnBP,EAAOQ,MAAQC,OAAOC,WACtBV,EAAOW,OAASF,OAAOG,YACvBC,GAAe,EAGXA,EAAgBA,KACpBP,EAAYQ,MAAMC,KAAK,CAAEC,OAAQ,MAAO,MACtCC,EAAGC,KAAKC,SAAWnB,EAAOQ,MAC1BY,EAAGF,KAAKC,SAAWnB,EAAOW,OAC1BU,GAA4B,IAAvBH,KAAKC,SAAW,IACrBG,GAA4B,IAAvBJ,KAAKC,SAAW,IACrBI,OAAwB,EAAhBL,KAAKC,SAAe,GAC5BK,QAAyB,GAAhBN,KAAKC,SAAiB,MAC9B,EA8CCO,EAAUA,KAXdpB,EAAUqB,SAAQC,IAChBA,EAASX,GAAKW,EAASP,GACvBO,EAASR,GAAKQ,EAASN,GAEnBM,EAASX,EAAI,IAAGW,EAASX,EAAIjB,EAAOQ,OACpCoB,EAASX,EAAIjB,EAAOQ,QAAOoB,EAASX,EAAI,GACxCW,EAASR,EAAI,IAAGQ,EAASR,EAAIpB,EAAOW,QACpCiB,EAASR,EAAIpB,EAAOW,SAAQiB,EAASR,EAAI,EAAC,IAtChDlB,EAAI2B,UAAU,EAAG,EAAG7B,EAAOQ,MAAOR,EAAOW,QAGzCT,EAAI4B,YACJ5B,EAAI6B,YAAc,2BAClB7B,EAAI8B,UAAY,GAEhB1B,EAAUqB,SAAQC,IAChBtB,EAAUqB,SAAQM,IAChB,MAAMC,EAAKN,EAASX,EAAIgB,EAAMhB,EACxBkB,EAAKP,EAASR,EAAIa,EAAMb,EACbF,KAAKkB,KAAKF,EAAKA,EAAKC,EAAKA,GAE3B,MACbjC,EAAImC,OAAOT,EAASX,EAAGW,EAASR,GAChClB,EAAIoC,OAAOL,EAAMhB,EAAGgB,EAAMb,GAC5B,GACA,IAEJlB,EAAIqC,SAGJjC,EAAUqB,SAAQC,IAChB1B,EAAI4B,YACJ5B,EAAIsC,IAAIZ,EAASX,EAAGW,EAASR,EAAGQ,EAASL,OAAQ,EAAa,EAAVL,KAAKuB,IACzDvC,EAAIwC,UAAY,uBAAuBd,EAASJ,WAChDtB,EAAIyC,MAAM,IAmBZtC,EAAmByC,sBAAsBpB,EAAQ,EAOnD,OAJAnB,IACAE,OAAOsC,iBAAiB,SAAUxC,GAClCmB,IAEO,KACLjB,OAAOuC,oBAAoB,SAAUzC,GACrC0C,qBAAqB5C,EAAiB,CACvC,GACA,KAGD6C,EAAAA,EAAAA,MAAA,WACEC,GAAG,OACHC,UAAU,eACVC,MAAO,CACLC,gBAAiB,gEAAgEA,KACjFC,mBAAoB,gBACpBC,eAAgB,QAChBC,iBAAkB,aAClBC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQC,IAAK9D,EAAqBsD,UAAU,+BAC5CO,EAAAA,EAAAA,KAAA,UAAQC,IAAKhE,EAAWwD,UAAU,2BAClCO,EAAAA,EAAAA,KAAA,OAAKP,UAAU,oBAAmBM,SAC/B,IAAI5C,MAAM,KAAK+C,KAAI,CAACC,EAAGC,KACtBJ,EAAAA,EAAAA,KAAA,OAAaP,UAAW,0BAA0BW,EAAI,IAAIL,UACxDC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,kBADPW,QAKdb,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcM,SAAA,EAC3BR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWM,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIP,UAAU,2BAA0BM,SAAC,6BACzCR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAERC,EAAAA,EAAAA,KAAA,KAAGP,UAAU,mBAAkBM,SAAC,2EAGhCR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAGK,KAAK,cAAcZ,UAAU,gBAAgBa,UAAQ,EAAAP,SAAC,qBAGzDR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KACEK,KAAK,oCACLE,OAAO,SACPC,IAAI,sBACJf,UAAU,qBACV,aAAW,iBAAgBM,UAE3BC,EAAAA,EAAAA,KAAA,OACES,IAAKC,EACLC,IAAI,SACJlB,UAAU,kBACVC,MAAO,CAAE7C,MAAO,OAAQG,OAAQ,aAGpCgD,EAAAA,EAAAA,KAAA,KACEK,KAAK,8CACLE,OAAO,SACPC,IAAI,sBACJf,UAAU,uBACV,aAAW,mBAAkBM,UAE7BC,EAAAA,EAAAA,KAAA,OACES,IAAKG,EACLD,IAAI,WACJlB,UAAU,kBACVC,MAAO,CAAE7C,MAAO,OAAQG,OAAQ,sBAM1CgD,EAAAA,EAAAA,KAAA,OAAKP,UAAU,aAAYM,UACzBR,EAAAA,EAAAA,MAAA,OAAKE,UAAU,4BAA2BM,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKS,IAAKI,EAAgBF,IAAI,UAAUlB,UAAU,qBAClDO,EAAAA,EAAAA,KAAA,OAAKP,UAAU,0BAIb,EAId,EAAeqB,EAAAA,KAAW9E,E","sources":["components/Hero/Hero.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Hero.css';\nimport backgroundImage from '../../assets/hero-bg.jpg';\nimport profilePicture from '../../assets/option2.jpeg';\nimport githubIcon from '../../assets/Github.png';\nimport linkedinIcon from '../../assets/LinkedIN.png';\n\nconst Hero = () => {\n  const canvasRef = useRef(null);\n  const backgroundCanvasRef = useRef(null);\n\n  // Main neural network effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: true });\n    let animationFrameId;\n    let particles = [];\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initParticles();\n    };\n\n    const initParticles = () => {\n      particles = Array.from({ length: 150 }, () => ({ // Increased number of particles\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        vx: (Math.random() - 0.5) * 0.2,\n        vy: (Math.random() - 0.5) * 0.2,\n        radius: Math.random() * 2 + 1,\n        opacity: Math.random() * 0.5 + 0.3, // Increased opacity\n        connections: []\n      }));\n    };\n\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw connections first\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.15)'; // Lighter color for connections\n      ctx.lineWidth = 0.5;\n\n      particles.forEach(particle => {\n        // Find nearby particles\n        particles.forEach(other => {\n          if (particle !== other) {\n            const dx = particle.x - other.x;\n            const dy = particle.y - other.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < 150) { // Increased connection distance\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n            }\n          }\n        });\n      });\n      ctx.stroke();\n\n      // Draw particles\n      particles.forEach(particle => {\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${particle.opacity})`; // Whiter particles\n        ctx.fill();\n\n        // Add glow effect\n        ctx.shadowBlur = 15;\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n      });\n    };\n\n    const updateParticles = () => {\n      particles.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Wrap around edges\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n      });\n    };\n\n    const animate = () => {\n      updateParticles();\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  // Background smaller networks\n  useEffect(() => {\n    const canvas = backgroundCanvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: true });\n    let animationFrameId;\n    let particles = [];\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initParticles();\n    };\n\n    const initParticles = () => {\n      particles = Array.from({ length: 100 }, () => ({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        vx: (Math.random() - 0.5) * 0.1,\n        vy: (Math.random() - 0.5) * 0.1,\n        radius: Math.random() * 1 + 0.5,\n        opacity: Math.random() * 0.3 + 0.2\n      }));\n    };\n\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw connections\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.lineWidth = 0.3;\n\n      particles.forEach(particle => {\n        particles.forEach(other => {\n          const dx = particle.x - other.x;\n          const dy = particle.y - other.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < 100) {\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(other.x, other.y);\n          }\n        });\n      });\n      ctx.stroke();\n\n      // Draw particles\n      particles.forEach(particle => {\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${particle.opacity})`;\n        ctx.fill();\n      });\n    };\n\n    const updateParticles = () => {\n      particles.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n      });\n    };\n\n    const animate = () => {\n      updateParticles();\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <section \n      id=\"hero\" \n      className=\"hero-section\" \n      style={{\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${backgroundImage})`,\n        backgroundPosition: 'center center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      <canvas ref={backgroundCanvasRef} className=\"background-network-canvas\" />\n      <canvas ref={canvasRef} className=\"neural-network-canvas\" />\n      <div className=\"floating-elements\">\n        {[...Array(12)].map((_, i) => (\n          <div key={i} className={`floating-circle circle-${i + 1}`}>\n            <div className=\"inner-circle\"></div>\n          </div>\n        ))}\n      </div>\n      <div className=\"hero-content\">\n        <div className=\"hero-text\">\n          <h1 className=\"hero-title glitch-effect\">Hi, I'm Premchand Jalla</h1>\n          <div className=\"title-scroll\">\n            <span>AI Developer</span>\n            <span>ML Engineer</span>\n            <span>Robot Builder</span>\n          </div>\n          <p className=\"hero-description\">\n            Crafting intelligent solutions at the intersection of AI and robotics\n          </p>\n          <div className=\"hero-buttons\">\n            <a href=\"/resume.pdf\" className=\"resume-button\" download>\n              Download Resume\n            </a>\n            <div className=\"social-links\">\n              <a \n                href=\"https://github.com/PremchandJalla\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"social-icon github\"\n                aria-label=\"GitHub Profile\"\n              >\n                <img \n                  src={githubIcon} \n                  alt=\"GitHub\" \n                  className=\"social-icon-img\"\n                  style={{ width: '55px', height: '55px' }}\n                />\n              </a>\n              <a \n                href=\"https://www.linkedin.com/in/premchandjalla/\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"social-icon linkedin\"\n                aria-label=\"LinkedIn Profile\"\n              >\n                <img \n                  src={linkedinIcon} \n                  alt=\"LinkedIn\" \n                  className=\"social-icon-img\"\n                  style={{ width: '55px', height: '55px' }}\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-image\">\n          <div className=\"profile-picture-container\">\n            <img src={profilePicture} alt=\"Profile\" className=\"profile-picture\" />\n            <div className=\"tech-circle\"></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(Hero);"],"names":["Hero","canvasRef","useRef","backgroundCanvasRef","useEffect","canvas","current","ctx","getContext","alpha","animationFrameId","particles","handleResize","width","window","innerWidth","height","innerHeight","initParticles","Array","from","length","x","Math","random","y","vx","vy","radius","opacity","connections","animate","forEach","particle","clearRect","beginPath","strokeStyle","lineWidth","other","dx","dy","sqrt","moveTo","lineTo","stroke","arc","PI","fillStyle","fill","shadowBlur","shadowColor","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","_jsxs","id","className","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","children","_jsx","ref","map","_","i","href","download","target","rel","src","githubIcon","alt","linkedinIcon","profilePicture","React"],"sourceRoot":""}