{"version":3,"file":"static/js/613.3a69ca5f.chunk.js","mappings":"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","sources":["components/Features/Features.jsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from 'react';\nimport './Features.css';\nimport backgroundImage from '../../assets/featured.jpg';\n\nconst Features = () => {\n  const canvasRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const particlesRef = useRef([]);\n  const lastTimeRef = useRef(0);\n  const fpsInterval = useRef(1000 / 30); // Cap at 30 FPS for better performance\n\n  // Memoize particle creation for better performance\n  const createParticles = useMemo(() => (width, height) => {\n    return Array.from({ length: 30 }, () => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      vx: (Math.random() - 0.5) * 0.15, // Slightly faster movement\n      vy: (Math.random() - 0.5) * 0.15,\n      radius: Math.random() * 2 + 1, // Larger particles\n      baseOpacity: Math.random() * 0.5 + 0.3, // Increased base opacity\n      opacity: Math.random() * 0.5 + 0.3,\n      glowIntensity: Math.random() * 0.7 + 0.5 // Increased glow\n    }));\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { \n      alpha: true, \n      willReadFrequently: false\n    });\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      particlesRef.current = createParticles(canvas.width, canvas.height);\n    };\n\n    const drawParticles = (ctx) => {\n      ctx.shadowBlur = 15;\n      ctx.shadowColor = 'rgba(0, 123, 255, 0.6)';\n      \n      particlesRef.current.forEach(particle => {\n        ctx.beginPath();\n        \n        // Enhanced gradient with more vibrant blue\n        const gradient = ctx.createRadialGradient(\n          particle.x, particle.y, 0,\n          particle.x, particle.y, particle.radius * 4\n        );\n        \n        gradient.addColorStop(0, `rgba(0, 123, 255, ${particle.opacity * particle.glowIntensity})`);\n        gradient.addColorStop(0.4, `rgba(0, 123, 255, ${particle.opacity * 0.8})`);\n        gradient.addColorStop(1, 'rgba(0, 123, 255, 0)');\n        \n        ctx.fillStyle = gradient;\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    };\n\n    const drawConnections = (ctx) => {\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(0, 123, 255, 0.3)';\n      ctx.lineWidth = 0.8;\n      \n      for (let i = 0; i < particlesRef.current.length; i++) {\n        const particle = particlesRef.current[i];\n        for (let j = i + 1; j < particlesRef.current.length; j++) {\n          const other = particlesRef.current[j];\n          const dx = particle.x - other.x;\n          const dy = particle.y - other.y;\n          const distance = dx * dx + dy * dy;\n\n          if (distance < 15000) {\n            const opacity = 0.3 * (1 - Math.sqrt(distance) / 150);\n            ctx.strokeStyle = `rgba(0, 123, 255, ${opacity})`;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(other.x, other.y);\n            ctx.stroke();\n          }\n        }\n      }\n    };\n\n    const updateParticles = () => {\n      particlesRef.current.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Add subtle pulsing to particles\n        particle.opacity = particle.baseOpacity + Math.sin(Date.now() * 0.003) * 0.2;\n\n        // Efficient boundary checking\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n      });\n    };\n\n    const animate = (currentTime) => {\n      const elapsed = currentTime - lastTimeRef.current;\n\n      if (elapsed > fpsInterval.current) {\n        lastTimeRef.current = currentTime - (elapsed % fpsInterval.current);\n        \n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        updateParticles();\n        drawParticles(ctx);\n        drawConnections(ctx);\n      }\n\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    \n    // Throttled resize handler\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n      if (!resizeTimeout) {\n        resizeTimeout = setTimeout(() => {\n          handleResize();\n          resizeTimeout = null;\n        }, 250);\n      }\n    });\n\n    animationFrameId.current = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n      clearTimeout(resizeTimeout);\n    };\n  }, [createParticles]);\n\n  return (\n    <section id=\"features\" className=\"features-section\" style={{\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${backgroundImage})`, // Reduced overlay opacity\n      filter: 'brightness(1.3) contrast(1.1)' // Adjusted for better visibility\n    }}>\n      <canvas ref={canvasRef} className=\"features-canvas\" />\n      <div className=\"features-glow\"></div>\n      <h2 className=\"section-title\">Projects & Achievements</h2>\n      <div className=\"features-grid\">\n        {[1, 2, 3].map((num) => (\n          <div key={num} className=\"feature-card\">\n            <div className=\"feature-image\">\n              <div className=\"feature-image-glow\"></div>\n            </div>\n            <div className=\"feature-content\">\n              <h3>Project {num}</h3>\n              <p>Description of project {num} goes here</p>\n              <div className=\"feature-tech-stack\">\n                <span>React</span>\n                <span>Node.js</span>\n                <span>MongoDB</span>\n              </div>\n              <div className=\"feature-links\">\n                <a \n                  href=\"https://github.com/yourusername/project\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"feature-link\"\n                >\n                  <i className=\"fab fa-github\"></i> View Code\n                </a>\n                <a \n                  href=\"https://project-demo.com\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"feature-link\"\n                >\n                  <i className=\"fas fa-external-link-alt\"></i> Live Demo\n                </a>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(Features); "],"names":["Features","canvasRef","useRef","animationFrameId","particlesRef","lastTimeRef","fpsInterval","createParticles","useMemo","width","height","Array","from","length","x","Math","random","y","vx","vy","radius","baseOpacity","opacity","glowIntensity","useEffect","canvas","current","ctx","getContext","alpha","willReadFrequently","handleResize","window","innerWidth","innerHeight","animate","currentTime","elapsed","clearRect","forEach","particle","sin","Date","now","shadowBlur","shadowColor","beginPath","gradient","createRadialGradient","addColorStop","fillStyle","arc","PI","fill","drawParticles","strokeStyle","lineWidth","i","j","other","dx","dy","distance","sqrt","moveTo","lineTo","stroke","drawConnections","requestAnimationFrame","resizeTimeout","addEventListener","setTimeout","cancelAnimationFrame","clearTimeout","_jsxs","id","className","style","backgroundImage","filter","children","_jsx","ref","map","num","href","target","rel","React"],"sourceRoot":""}