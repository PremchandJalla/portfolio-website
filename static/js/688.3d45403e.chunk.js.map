{"version":3,"file":"static/js/688.3d45403e.chunk.js","mappings":"0XAEA,MAMA,EANkBA,IAAA,IAAC,KAAEC,EAAI,IAAEC,EAAG,IAAEC,EAAG,UAAEC,GAAWJ,EAAA,OAC9CK,EAAAA,EAAAA,KAAA,KAAGJ,KAAMA,EAAMK,OAAO,SAASC,IAAI,sBAAsBH,UAAU,cAAc,aAAYD,EAAIK,UAC/FH,EAAAA,EAAAA,KAAA,OAAKH,IAAKA,EAAKC,IAAKA,EAAKC,UAAWA,EAAWK,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAC7E,ECGAC,EAAOA,KACX,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAsBD,EAAAA,EAAAA,QAAO,MACnC,IAAIE,EAAY,GAEhB,MAYMC,GAAeC,EAAAA,EAAAA,cAAY,KAC/B,MAAMC,EAASN,EAAUO,QACzBD,EAAOT,MAAQW,OAAOC,WACtBH,EAAOR,OAASU,OAAOE,YAfEJ,KACzBH,EAAYQ,MAAMC,KAAK,CAAEC,OAAQ,KAAM,MACrCC,EAAGC,KAAKC,SAAWV,EAAOT,MAC1BoB,EAAGF,KAAKC,SAAWV,EAAOR,OAC1BoB,GAA4B,IAAvBH,KAAKC,SAAW,IACrBG,GAA4B,IAAvBJ,KAAKC,SAAW,IACrBI,OAAwB,IAAhBL,KAAKC,SAAiB,GAC9BK,QAAyB,GAAhBN,KAAKC,SAAiB,GAC/BM,YAAa,MACZ,EAOHC,CAAkBjB,EAAO,GACxB,IAyEH,OAvEAkB,EAAAA,EAAAA,YAAU,KACR,MAAMlB,EAASN,EAAUO,QACnBkB,EAAMnB,EAAOoB,WAAW,KAAM,CAAEC,OAAO,IAC7C,IAAIC,EAEJ,MAkDMC,EAAUA,KAZd1B,EAAU2B,SAAQC,IAChBA,EAASjB,GAAKiB,EAASb,GACvBa,EAASd,GAAKc,EAASZ,GAGnBY,EAASjB,EAAI,IAAGiB,EAASjB,EAAIR,EAAOT,OACpCkC,EAASjB,EAAIR,EAAOT,QAAOkC,EAASjB,EAAI,GACxCiB,EAASd,EAAI,IAAGc,EAASd,EAAIX,EAAOR,QACpCiC,EAASd,EAAIX,EAAOR,SAAQiC,EAASd,EAAI,EAAC,IA7ChDQ,EAAIO,UAAU,EAAG,EAAG1B,EAAOT,MAAOS,EAAOR,QAGzC2B,EAAIQ,YACJR,EAAIS,YAAc,yBAClBT,EAAIU,UAAY,GAEhBhC,EAAU2B,SAAQC,IAChB5B,EAAU2B,SAAQM,IAChB,GAAIL,IAAaK,EAAO,CACtB,MAAMC,EAAKN,EAASjB,EAAIsB,EAAMtB,EACxBwB,EAAKP,EAASd,EAAImB,EAAMnB,EACbF,KAAKwB,KAAKF,EAAKA,EAAKC,EAAKA,GAE3B,MACbb,EAAIe,OAAOT,EAASjB,EAAGiB,EAASd,GAChCQ,EAAIgB,OAAOL,EAAMtB,EAAGsB,EAAMnB,GAE9B,IACA,IAEJQ,EAAIiB,SAGJvC,EAAU2B,SAAQC,IAChBN,EAAIQ,YACJR,EAAIkB,IAAIZ,EAASjB,EAAGiB,EAASd,EAAGc,EAASX,OAAQ,EAAa,EAAVL,KAAK6B,IACzDnB,EAAIoB,UAAY,qBAAqBd,EAASV,WAC9CI,EAAIqB,OAGJrB,EAAIsB,WAAa,GACjBtB,EAAIuB,YAAc,wBAAwB,IAoB5CpB,EAAmBqB,sBAAsBpB,EAAQ,EAOnD,OAJAzB,IACAI,OAAO0C,iBAAiB,SAAU9C,GAClCyB,IAEO,KACLrB,OAAO2C,oBAAoB,SAAU/C,GACrCgD,qBAAqBxB,EAAiB,CACvC,GACA,CAACxB,KAGFiD,EAAAA,EAAAA,MAAA,WACEC,GAAG,OACH/D,UAAU,eACVK,MAAO,CACL2D,gBAAiB,gEAAgEA,KACjFC,mBAAoB,gBACpBC,eAAgB,QAChBC,iBAAkB,aAClB/D,SAAA,EAEFH,EAAAA,EAAAA,KAAA,UAAQmE,IAAKzD,EAAqBX,UAAU,+BAC5CC,EAAAA,EAAAA,KAAA,UAAQmE,IAAK3D,EAAWT,UAAU,2BAClCC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBI,SAC/B,IAAIgB,MAAM,KAAKiD,KAAI,CAACC,EAAGC,KACtBtE,EAAAA,EAAAA,KAAA,OAAaD,UAAW,0BAA0BuE,EAAI,IAAInE,UACxDH,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBADPuE,QAKdT,EAAAA,EAAAA,MAAA,OAAK9D,UAAU,eAAcI,SAAA,EAC3B0D,EAAAA,EAAAA,MAAA,OAAK9D,UAAU,YAAWI,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAID,UAAU,2BAA0BI,SAAC,6BACzC0D,EAAAA,EAAAA,MAAA,OAAK9D,UAAU,eAAcI,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,kBACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,2BACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,oBACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,mBACNH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,6BAERH,EAAAA,EAAAA,KAAA,KAAGD,UAAU,mBAAkBI,SAAC,8TAGhC0D,EAAAA,EAAAA,MAAA,OAAK9D,UAAU,eAAcI,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,KAAGJ,KAAK,qFAAqFG,UAAU,gBAAgBE,OAAO,QAAOE,SAAC,YAGtIH,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcI,UAC3B0D,EAAAA,EAAAA,MAACU,EAAAA,SAAQ,CAACC,UAAUxE,EAAAA,EAAAA,KAAA,OAAAG,SAAK,eAAiBA,SAAA,EACxCH,EAAAA,EAAAA,KAACyE,EAAS,CACR7E,KAAK,oCACLC,IAAK6E,EACL5E,IAAI,SACJC,UAAU,kBAAiB4E,IAAE,KAE/B3E,EAAAA,EAAAA,KAACyE,EAAS,CACR7E,KAAK,8CACLC,IAAK+E,EACL9E,IAAI,WACJC,UAAU,gCAMpBC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,aAAYI,UACzBH,EAAAA,EAAAA,KAAA,OAAKD,UAAU,4BAA2BI,UACxCH,EAAAA,EAAAA,KAAA,OAAKH,IAAKgF,EAAgB/E,IAAI,UAAUC,UAAU,6BAIhD,EAId,EAAe+E,EAAAA,KAAWvE,E","sources":["components/Hero/LazyImage.jsx","components/Hero/Hero.jsx"],"sourcesContent":["import React from 'react';\n\nconst LazyImage = ({ href, src, alt, className }) => (\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\" aria-label={alt}>\n    <img src={src} alt={alt} className={className} style={{ width: '55px', height: '55px' }} />\n  </a>\n);\n\nexport default LazyImage; ","import React, { useEffect, useRef, useCallback, Suspense } from 'react';\nimport './Hero.css';\nimport backgroundImage from '../../assets/hero-bg.jpg';\nimport profilePicture from '../../assets/option2.jpeg';\nimport githubIcon from '../../assets/Github.png';\nimport linkedinIcon from '../../assets/LinkedIN.png';\nimport LazyImage from './LazyImage';\n\nconst Hero = () => {\n  const canvasRef = useRef(null);\n  const backgroundCanvasRef = useRef(null);\n  let particles = [];\n\n  const initMainParticles = (canvas) => {\n    particles = Array.from({ length: 50 }, () => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      vx: (Math.random() - 0.5) * 0.1,\n      vy: (Math.random() - 0.5) * 0.1,\n      radius: Math.random() * 1.5 + 0.5,\n      opacity: Math.random() * 0.7 + 0.5,\n      connections: []\n    }));\n  };\n\n  const handleResize = useCallback(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    initMainParticles(canvas);\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: true });\n    let animationFrameId;\n\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw connections first\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(0, 123, 255, 0.3)';\n      ctx.lineWidth = 0.7;\n\n      particles.forEach(particle => {\n        particles.forEach(other => {\n          if (particle !== other) {\n            const dx = particle.x - other.x;\n            const dy = particle.y - other.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < 100) {\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n            }\n          }\n        });\n      });\n      ctx.stroke();\n\n      // Draw particles\n      particles.forEach(particle => {\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(0, 123, 255, ${particle.opacity})`;\n        ctx.fill();\n\n        // Add glow effect\n        ctx.shadowBlur = 15;\n        ctx.shadowColor = 'rgba(0, 123, 255, 0.7)';\n      });\n    };\n\n    const updateParticles = () => {\n      particles.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Wrap around edges\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n      });\n    };\n\n    const animate = () => {\n      updateParticles();\n      drawParticles();\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [handleResize]);\n\n  return (\n    <section \n      id=\"hero\" \n      className=\"hero-section\" \n      style={{\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${backgroundImage})`,\n        backgroundPosition: 'center center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      <canvas ref={backgroundCanvasRef} className=\"background-network-canvas\" />\n      <canvas ref={canvasRef} className=\"neural-network-canvas\" />\n      <div className=\"floating-elements\">\n        {[...Array(12)].map((_, i) => (\n          <div key={i} className={`floating-circle circle-${i + 1}`}>\n            <div className=\"inner-circle\"></div>\n          </div>\n        ))}\n      </div>\n      <div className=\"hero-content\">\n        <div className=\"hero-text\">\n          <h1 className=\"hero-title glitch-effect\">Hi, I'm Premchand Jalla</h1>\n          <div className=\"title-scroll\">\n            <span>AI Developer</span>\n            <span>Application Developer</span>\n            <span>MLOps Engineer</span>\n            <span>Data Engineer</span>\n            <span>Full stack developer</span>\n          </div>\n          <p className=\"hero-description\">\n          I am a software engineer passionate about building AI solutions, with experience in application development and machine learning. I'm building AI solutions to make a positive impact in the world. Let's tune those hyperparameters and optimize for greatness! Turning ideas into reality, one line of code at a time.\n          </p>\n          <div className=\"hero-buttons\">\n            <a href=\"https://drive.google.com/file/d/1c8-B_09Gcmg7DrgyB0vypglViS5lFDA3/view?usp=sharing\" className=\"resume-button\" target='blank'>\n              Resume\n            </a>\n            <div className=\"social-links\">\n              <Suspense fallback={<div>Loading...</div>}>\n                <LazyImage \n                  href=\"https://github.com/PremchandJalla\" \n                  src={githubIcon} \n                  alt=\"GitHub\" \n                  className=\"social-icon-img\"th\n                />\n                <LazyImage \n                  href=\"https://www.linkedin.com/in/premchandjalla/\" \n                  src={linkedinIcon} \n                  alt=\"LinkedIn\" \n                  className=\"social-icon-img\"\n                />\n              </Suspense>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-image\">\n          <div className=\"profile-picture-container\">\n            <img src={profilePicture} alt=\"Profile\" className=\"profile-picture\" />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(Hero);\n"],"names":["_ref","href","src","alt","className","_jsx","target","rel","children","style","width","height","Hero","canvasRef","useRef","backgroundCanvasRef","particles","handleResize","useCallback","canvas","current","window","innerWidth","innerHeight","Array","from","length","x","Math","random","y","vx","vy","radius","opacity","connections","initMainParticles","useEffect","ctx","getContext","alpha","animationFrameId","animate","forEach","particle","clearRect","beginPath","strokeStyle","lineWidth","other","dx","dy","sqrt","moveTo","lineTo","stroke","arc","PI","fillStyle","fill","shadowBlur","shadowColor","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","_jsxs","id","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ref","map","_","i","Suspense","fallback","LazyImage","githubIcon","th","linkedinIcon","profilePicture","React"],"sourceRoot":""}