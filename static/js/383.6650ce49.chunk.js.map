{"version":3,"file":"static/js/383.6650ce49.chunk.js","mappings":"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","sources":["components/Features/InternalCard.jsx","components/Features/Features.jsx"],"sourcesContent":["import React from 'react';\nimport './InternalCard.css';\n\nconst InternalCard = ({ project }) => {\n  return (\n    <div className=\"internal-card\">\n      <div className=\"internal-card-image\" style={{ backgroundImage: `url(${project.image})` }}></div>\n      <div className=\"internal-card-content\">\n        <h4>{project.title}</h4>\n        <p>{project.description}</p>\n        <div className=\"internal-card-tech\">\n          {project.technologies.map((tech, i) => (\n            <span key={i}>{tech}</span>\n          ))}\n        </div>\n        <div className=\"internal-card-links\">\n          <a href={project.codeLink} target=\"_blank\" rel=\"noopener noreferrer\">View Code</a>\n          <a href={project.demoLink} target=\"_blank\" rel=\"noopener noreferrer\">Live Demo</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalCard; ","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport './Features.css';\nimport InternalCard from './InternalCard';\nimport aiAgentsImage from '../../assets/ai-agents.jpg';\nimport realEstateImage from '../../assets/real-estate.png';\nimport healthcareImage from '../../assets/healthcare.webp';\nimport chatbotsImage from '../../assets/chatbots.jpg';\nimport achievementsImage from '../../assets/specialRecog.jpg';\nimport backgroundImage from '../../assets/featured.jpg';\nimport highlander from '../../assets/HighlanderBot.jpg';\nimport dog from '../../assets/Dog.jpg';\nimport specialRecog from '../../assets/specialRecog.jpg';\nimport aimlimg from '../../assets/aiml.jpg';\nimport cloudera from '../../assets/ClouderaE.png';\nimport star from '../../assets/Star.png';\nimport rl from '../../assets/rl.webp';\n\nconst Features = () => {\n  const canvasRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const particlesRef = useRef([]);\n  const lastTimeRef = useRef(0);\n  const fpsInterval = useRef(1000 / 30);\n\n  const [activeCategory, setActiveCategory] = useState(null);\n\n  const categories = {\n    'AI Agents': {\n      icon: 'fas fa-robot',\n      projects: [],\n      image: aiAgentsImage,\n      description: 'Explore AI-driven tools and agents.',\n    },\n    'AI Implementation in Real Estate': {\n      icon: 'fas fa-home',\n      projects: [],\n      image: realEstateImage,\n      description: 'Explore AI-driven tools in real estate.',\n    },\n    'AI Implementation in Healthcare': {\n      icon: 'fas fa-heartbeat',\n      projects: [\n        { title: 'Attention-Based Deep Learning for Dog Cardiomegaly Classification', description: 'Neural Network built from Scratch for Classifying Dog Cardiomegaly', image: dog, technologies: ['Deep Learning', 'PyTorch'], codeLink: '#', demoLink: '#' }\n      ],\n      image: healthcareImage,\n      description: 'Explore AI solutions in healthcare.',\n    },\n    'AI-Powered Chatbots and Tools': {\n      icon: 'fas fa-comments',\n      projects: [\n        { title: 'Highlander Bot', description: 'ChatBot for NJIT', image: highlander, technologies: ['LLM', 'Python', 'Flask'], codeLink: '#', demoLink: '#' },\n        { title: 'Cloudera Evolve24 Hackathon winner', description: 'Built an Accelerated Machine Learning Package for a RAG based Legal Q&A chatbot in 12 hours', image: cloudera, technologies: ['NVIDIA NIM', 'LLM', 'AMPs'], codeLink: '#', demoLink: '#' },\n        { title: 'Star Micronics Dashboard', description: 'Designed and implemented a robust dashboard for analyzing POS data', image: star, technologies: ['Python', 'Flask', 'Dash', 'LLM'], codeLink: '#', demoLink: '#' }\n      ],\n      image: chatbotsImage,\n      description: 'Discover AI-powered chatbots and tools.',\n    },\n    Achievements: {\n      icon: 'fas fa-trophy',\n      projects: [\n        { title: 'Special Recognition Award', description: 'Special Recognition Award for leading Banks Statement Analysis Module', image: specialRecog, technologies: ['LLM', 'AWS', 'Flask', 'Dockers'], codeLink: '#', demoLink: '#' },\n        { title: 'AI/ML Hackathon Award', description: 'Designed and deployed MLOps pipelines for underperforming large language models', image: aimlimg, technologies: ['MLOps', 'LLM Evaluation', 'CI/CD'], codeLink: '#', demoLink: '#' }\n      ],\n      image: achievementsImage,\n      description: 'View notable achievements and awards.',\n    },\n    'Core AI Algorithms and Reinforcement Learning': {\n      icon: 'fas fa-brain',\n      projects: [\n        { title: 'Reinforcement Learning Project', description: 'An advanced project on reinforcement learning algorithms', image: '', technologies: ['Reinforcement Learning', 'Python'], codeLink: '#', demoLink: '#' }\n      ],\n      image: rl, // Add an appropriate image path here\n      description: 'Explore core AI algorithms and reinforcement learning projects.',\n    },\n  };\n\n  const createParticles = useMemo(() => (width, height) => {\n    return Array.from({ length: 30 }, () => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      vx: (Math.random() - 0.5) * 0.15,\n      vy: (Math.random() - 0.5) * 0.15,\n      radius: Math.random() * 2 + 1,\n      baseOpacity: Math.random() * 0.5 + 0.3,\n      opacity: Math.random() * 0.5 + 0.3,\n      glowIntensity: Math.random() * 0.7 + 0.5,\n    }));\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      particlesRef.current = createParticles(canvas.width, canvas.height);\n    };\n\n    const drawParticles = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particlesRef.current.forEach((particle) => {\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(0, 123, 255, ${particle.opacity})`;\n        ctx.fill();\n      });\n    };\n\n    const updateParticles = () => {\n      particlesRef.current.forEach((particle) => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        if (particle.x < 0 || particle.x > canvas.width) particle.vx *= -1;\n        if (particle.y < 0 || particle.y > canvas.height) particle.vy *= -1;\n      });\n    };\n\n    const animate = () => {\n      drawParticles();\n      updateParticles();\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    animationFrameId.current = requestAnimationFrame(animate);\n\n    return () => {\n      cancelAnimationFrame(animationFrameId.current);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [createParticles]);\n\n  return (\n    <section \n      id=\"features\"    \n      className=\"features-section\" \n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <canvas ref={canvasRef} className=\"features-canvas\" />\n      <h2 className=\"section-title\">Projects & Achievements</h2>\n      {!activeCategory ? (\n        <div className=\"features-grid\">\n          {Object.entries(categories).map(([category, { icon, image, description }]) => (\n            <div\n              key={category}\n              className=\"features-category\"\n              onClick={() => setActiveCategory(category)}\n              style={{ backgroundImage: `url(${image})` }}\n            >\n              <div className=\"icon-wrapper\">\n                <i className={icon}></i>\n              </div>\n              <h3>{category}</h3>\n              <p className=\"description\">{description}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"active-category-view\">\n          <h3>{activeCategory}</h3>\n          <div className=\"internal-cards\">\n            {categories[activeCategory].projects.map((project, index) => (\n              <InternalCard key={index} project={project} />\n            ))}\n          </div>\n          <button onClick={() => setActiveCategory(null)} className=\"back-button\">\n            Back to Categories\n          </button>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Features;\n"],"names":["_ref","project","_jsxs","className","children","_jsx","style","backgroundImage","image","title","description","technologies","map","tech","i","href","codeLink","target","rel","demoLink","Features","canvasRef","useRef","animationFrameId","particlesRef","activeCategory","setActiveCategory","useState","categories","icon","projects","aiAgentsImage","realEstateImage","dog","healthcareImage","highlander","cloudera","star","chatbotsImage","Achievements","specialRecog","aimlimg","achievementsImage","rl","createParticles","useMemo","width","height","Array","from","length","x","Math","random","y","vx","vy","radius","baseOpacity","opacity","glowIntensity","useEffect","canvas","current","ctx","getContext","handleResize","window","innerWidth","innerHeight","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","requestAnimationFrame","addEventListener","cancelAnimationFrame","removeEventListener","id","ref","index","InternalCard","onClick","Object","entries","category"],"sourceRoot":""}