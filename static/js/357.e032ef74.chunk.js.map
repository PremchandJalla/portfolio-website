{"version":3,"file":"static/js/357.e032ef74.chunk.js","mappings":"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","sources":["components/Features/Features.jsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from 'react';\nimport './Features.css';\nimport backgroundImage from '../../assets/featured.jpg';\nimport highlander from '../../assets/HighlanderBot.jpg';\nimport dog from '../../assets/Dog.jpg';\nimport specialRecog from '../../assets/specialRecog.jpg';\nimport aiml from '../../assets/AI_ML Hackathon.jpg';\nimport cloudera from '../../assets/ClouderaE.png';\nimport star from '../../assets/Star.png';\n\nconst Features = () => {\n  const canvasRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const particlesRef = useRef([]);\n  const lastTimeRef = useRef(0);\n  const fpsInterval = useRef(1000 / 30); // Cap at 30 FPS for better performance\n\n  // Sample project data with image field\n  const projectData = [\n    {\n      id: 1,\n      title: \"Highlander Bot\",\n      description: \"Description of project 1 goes here\",\n      technologies: [\"LLM\", \"Python\", \"Flask\"],\n      codeLink: \"https://github.com/PremchandJalla/HackNJITBOT\",\n      demoLink: \"https://github.com/PremchandJalla/HackNJITBOT\",\n      image: highlander, // Placeholder image URL\n    },\n    {\n      id: 2,\n      title: \"Attention-Based Deep Learning for Dog Cardiomegaly Classification\",\n      description: \"Description of project 2 goes here\",\n      technologies: [\"Deep Learning\", \"PyTorch\"],\n      codeLink: \"https://github.com/PremchandJalla/Dog-Cardiomegaly\",\n      demoLink: \"https://www.researchgate.net/publication/385982443_Attention-Based_Deep_Learning_for_Dog_Cardiomegaly_Classification\",\n      image: dog, // Placeholder image URL\n    },\n    {\n      id: 3,\n      title: \"Special Recognition Award\",\n      description: \"Description of project 2 goes here\",\n      technologies: [\"LLM\", \"AWS\", \"Flask\",\"Dockers\"],\n      codeLink: \"https://drive.google.com/file/d/148x-pWINaTI_lIbDQLPA4BU9VOmxAfNu/view\",\n      demoLink: \"https://drive.google.com/file/d/148x-pWINaTI_lIbDQLPA4BU9VOmxAfNu/view\",\n      image: specialRecog, // Placeholder image URL\n    },\n    {\n      id: 4,\n      title: \"AI/ML Hackathon Award\",\n      description: \"Description of project 2 goes here\",\n      technologies: [\"MLOps\", \"LLM Evaluation\", \"CI/CD\"],\n      codeLink: \"https://drive.google.com/file/d/1kVQbG7NGvroSniULgfbIY7_1gKwfLFlV/view\",\n      demoLink: \"https://drive.google.com/file/d/1kVQbG7NGvroSniULgfbIY7_1gKwfLFlV/view\",\n      image: aiml, // Placeholder image URL\n    },\n    {\n      id: 5,\n      title: \"Legal Q&A Bot, Cloudera Evolve24 Hackathon winner\",\n      description: \"Description of project 2 goes here\",\n      technologies: [\"NVDIA NIM\", \"LLM\", \"AMPs\"],\n      codeLink: \"https://github.com/PremchandJalla/LegalDocHack\",\n      demoLink: \"https://github.com/PremchandJalla/LegalDocHack\",\n      image: cloudera, // Placeholder image URL\n    },\n    {\n      id: 6,\n      title: \"Star Micronics Dashboard\",\n      description: \"Description of project 2 goes here\",\n      technologies: [\"Python\", \"Flask\", \"Dash\" , \"LLM\"],\n      codeLink: \"https://github.com/PremchandJalla/sma-flask-dashboard\",\n      demoLink: \"https://www.google.com/url?q=https://starmicronics-dashboard.onrender.com&sa=D&source=apps-viewer-frontend&ust=1733001313509321&usg=AOvVaw1cgOfTGq2Z7JB4pXEmy62v&hl=en\",\n      image: star, // Placeholder image URL\n    },\n\n  ];\n\n  // Memoize particle creation for better performance\n  const createParticles = useMemo(() => (width, height) => {\n    return Array.from({ length: 30 }, () => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      vx: (Math.random() - 0.5) * 0.15,\n      vy: (Math.random() - 0.5) * 0.15,\n      radius: Math.random() * 2 + 1,\n      baseOpacity: Math.random() * 0.5 + 0.3,\n      opacity: Math.random() * 0.5 + 0.3,\n      glowIntensity: Math.random() * 0.7 + 0.5,\n    }));\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d', { alpha: true, willReadFrequently: false });\n\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      particlesRef.current = createParticles(canvas.width, canvas.height);\n    };\n\n    const drawParticles = (ctx) => {\n      ctx.shadowBlur = 15;\n      ctx.shadowColor = 'rgba(0, 123, 255, 0.6)';\n      particlesRef.current.forEach((particle) => {\n        ctx.beginPath();\n        const gradient = ctx.createRadialGradient(\n          particle.x,\n          particle.y,\n          0,\n          particle.x,\n          particle.y,\n          particle.radius * 4\n        );\n        gradient.addColorStop(0, `rgba(0, 123, 255, ${particle.opacity * particle.glowIntensity})`);\n        gradient.addColorStop(0.4, `rgba(0, 123, 255, ${particle.opacity * 0.8})`);\n        gradient.addColorStop(1, 'rgba(0, 123, 255, 0)');\n        ctx.fillStyle = gradient;\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    };\n\n    const drawConnections = (ctx) => {\n      ctx.beginPath();\n      ctx.strokeStyle = 'rgba(0, 123, 255, 0.3)';\n      ctx.lineWidth = 0.8;\n      for (let i = 0; i < particlesRef.current.length; i++) {\n        const particle = particlesRef.current[i];\n        for (let j = i + 1; j < particlesRef.current.length; j++) {\n          const other = particlesRef.current[j];\n          const dx = particle.x - other.x;\n          const dy = particle.y - other.y;\n          const distance = dx * dx + dy * dy;\n          if (distance < 15000) {\n            const opacity = 0.3 * (1 - Math.sqrt(distance) / 150);\n            ctx.strokeStyle = `rgba(0, 123, 255, ${opacity})`;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(other.x, other.y);\n            ctx.stroke();\n          }\n        }\n      }\n    };\n\n    const updateParticles = () => {\n      particlesRef.current.forEach((particle) => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.opacity = particle.baseOpacity + Math.sin(Date.now() * 0.003) * 0.2;\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n      });\n    };\n\n    const animate = (currentTime) => {\n      const elapsed = currentTime - lastTimeRef.current;\n      if (elapsed > fpsInterval.current) {\n        lastTimeRef.current = currentTime - (elapsed % fpsInterval.current);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        updateParticles();\n        drawParticles(ctx);\n        drawConnections(ctx);\n      }\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n\n    handleResize();\n    let resizeTimeout;\n    window.addEventListener('resize', () => {\n      if (!resizeTimeout) {\n        resizeTimeout = setTimeout(() => {\n          handleResize();\n          resizeTimeout = null;\n        }, 250);\n      }\n    });\n\n    animationFrameId.current = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n      clearTimeout(resizeTimeout);\n    };\n  }, [createParticles]);\n\n  return (\n    <section\n      id=\"features\"\n      className=\"features-section\"\n      style={{\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${backgroundImage})`,\n        filter: 'brightness(1.3) contrast(1.1)',\n      }}\n    >\n      <canvas ref={canvasRef} className=\"features-canvas\" />\n      <div className=\"features-glow\"></div>\n      <h2 className=\"section-title\">Projects & Achievements</h2>\n      <div className=\"features-grid\">\n        {projectData.map((project) => (\n          <div key={project.id} className=\"feature-card\">\n            <div className=\"feature-image\">\n              <img src={project.image} alt={`${project.title} Thumbnail`} />\n            </div>\n            <div className=\"feature-content\">\n              <h3>{project.title}</h3>\n              <p>{project.description}</p>\n              <div className=\"feature-tech-stack\">\n                {project.technologies.map((tech, index) => (\n                  <span key={index}>{tech}</span>\n                ))}\n              </div>\n              <div className=\"feature-links\">\n                <a\n                  href={project.codeLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"feature-link\"\n                >\n                  <i className=\"fab fa-github\"></i> View Code\n                </a>\n                <a\n                  href={project.demoLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"feature-link\"\n                >\n                  <i className=\"fas fa-external-link-alt\"></i> Live Demo\n                </a>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(Features);\n"],"names":["Features","canvasRef","useRef","animationFrameId","particlesRef","lastTimeRef","fpsInterval","projectData","id","title","description","technologies","codeLink","demoLink","image","highlander","dog","specialRecog","aiml","cloudera","star","createParticles","useMemo","width","height","Array","from","length","x","Math","random","y","vx","vy","radius","baseOpacity","opacity","glowIntensity","useEffect","canvas","current","ctx","getContext","alpha","willReadFrequently","handleResize","window","innerWidth","innerHeight","animate","currentTime","elapsed","clearRect","forEach","particle","sin","Date","now","shadowBlur","shadowColor","beginPath","gradient","createRadialGradient","addColorStop","fillStyle","arc","PI","fill","drawParticles","strokeStyle","lineWidth","i","j","other","dx","dy","distance","sqrt","moveTo","lineTo","stroke","drawConnections","requestAnimationFrame","resizeTimeout","addEventListener","setTimeout","cancelAnimationFrame","clearTimeout","_jsxs","className","style","backgroundImage","filter","children","_jsx","ref","map","project","src","alt","tech","index","href","target","rel","React"],"sourceRoot":""}